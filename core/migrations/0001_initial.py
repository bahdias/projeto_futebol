# Generated by Django 4.2.4 on 2023-09-01 02:26

import core.constants
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Equipe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=200, verbose_name='Nome da Equipe')),
                ('sigla', models.CharField(max_length=200, verbose_name='Sigla da Equipe')),
            ],
            options={
                'verbose_name': 'Equipe',
                'verbose_name_plural': 'Equipes',
            },
        ),
        migrations.CreateModel(
            name='Jogador',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=200, verbose_name='Nome do Jogador')),
                ('idade', models.IntegerField(verbose_name='Idade')),
                ('nacionalidade', models.CharField(max_length=200, verbose_name='Nacionalidade')),
                ('posicao', models.SmallIntegerField(choices=[(core.constants.EnumPosicao['GOLEIRO'], 'Goleiro'), (core.constants.EnumPosicao['ZAGUEIRO'], 'Zagueiro'), (core.constants.EnumPosicao['LATERAL'], 'Lateral'), (core.constants.EnumPosicao['VOLANTE'], 'Volante'), (core.constants.EnumPosicao['MEIA'], 'Meia'), (core.constants.EnumPosicao['ATACANTE'], 'Atacante')], verbose_name='Posição do Jogador')),
                ('peso', models.IntegerField(verbose_name='Peso')),
                ('altura', models.IntegerField(verbose_name='Altura')),
                ('preferencia_pe', models.SmallIntegerField(choices=[(core.constants.EnumPreferenciaPe['ESQUERDO'], 'Esquerdo'), (core.constants.EnumPreferenciaPe['DIREITO'], 'Direito')], verbose_name='Preferência de pé')),
                ('avaliacao_desempenho', models.SmallIntegerField(blank=True, choices=[(core.constants.EnumDesempenho['EXCELENTE'], 'Excelente'), (core.constants.EnumDesempenho['BOM'], 'Bom'), (core.constants.EnumDesempenho['MEDIO'], 'Médio'), (core.constants.EnumDesempenho['EM_DESENVOLVIMENTO'], 'Em desenvolvimento'), (core.constants.EnumDesempenho['PESSIMO'], 'Péssimo')], null=True, verbose_name='Posição do Jogador')),
            ],
            options={
                'verbose_name': 'Jogador',
                'verbose_name_plural': 'Jogadores',
            },
        ),
        migrations.CreateModel(
            name='Jogo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_partida', models.DateTimeField(blank=True, verbose_name='Data da Partida')),
                ('placar_casa', models.IntegerField(blank=True, null=True, verbose_name='Placar da Equipe da Casa')),
                ('placar_visitante', models.IntegerField(blank=True, null=True, verbose_name='Placar da Equipe Visitante')),
                ('local', models.CharField(max_length=200, verbose_name='Local do Jogo')),
                ('arbitro', models.CharField(max_length=200, verbose_name='Nome do Árbitro Pricipal')),
                ('tempo_jogo', models.IntegerField(blank=True, null=True, verbose_name='Tempo do Jogo (em minutos)')),
                ('equipe_casa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='equipe_casa', to='core.equipe', verbose_name='Equipe da Casa')),
                ('equipe_visitante', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='equipe_visitante', to='core.equipe', verbose_name='Equipe Visitante')),
            ],
            options={
                'verbose_name': 'Jogo',
                'verbose_name_plural': 'Jogos',
            },
        ),
        migrations.CreateModel(
            name='Time',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=200, verbose_name='Nome da Equipe')),
                ('sigla', models.CharField(max_length=200, verbose_name='Sigla da Equipe')),
                ('fundacao', models.DateField(blank=True, null=True, verbose_name='Fundado em')),
                ('cidade', models.CharField(max_length=200, verbose_name='Cidade sede da equipe')),
                ('estadio', models.CharField(help_text='Estádio em que a equipe joga', max_length=200, verbose_name='Estádio')),
                ('cores', models.CharField(max_length=200, verbose_name='Cores da Equipe')),
                ('escudo_url', models.URLField(blank=True, max_length=500, null=True, verbose_name='URL do Escudo')),
                ('escudo', models.FileField(blank=True, null=True, upload_to='cliente', verbose_name='Escudo')),
                ('anexado_em', models.DateField(blank=True, null=True, verbose_name='Anexado em')),
                ('treinador', models.CharField(max_length=200, verbose_name='Treinador da Equipe')),
                ('classificacao', models.SmallIntegerField(choices=[(core.constants.EnumClassificacao['CONMEBOL_LIBERTADORES'], 'Conmebol Libertadores'), (core.constants.EnumClassificacao['CONMEBOL_LIBERTADORES_QUALIFIERS'], 'Conmebol Libertadores Qualifiers'), (core.constants.EnumClassificacao['CONMEBOL_SUDAMERICANA'], 'Conmebol Sudamericana'), (core.constants.EnumClassificacao['REBAIXAMENTO'], 'Rebaixamento')], verbose_name='Classificação')),
                ('pontos', models.IntegerField(verbose_name='Pontuação')),
                ('calendario', models.ManyToManyField(to='core.jogo', verbose_name='Calendário')),
                ('jogadores', models.ManyToManyField(to='core.jogador', verbose_name='Goleiros')),
            ],
            options={
                'verbose_name': 'Time',
                'verbose_name_plural': 'Times',
            },
        ),
        migrations.CreateModel(
            name='EstatisticasJogo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('equipe', models.CharField(max_length=200, verbose_name='Equipe')),
                ('posse_de_bola', models.IntegerField(help_text='Em Porcentagem', verbose_name='Posses de Bola')),
                ('finalizacoes', models.IntegerField(verbose_name='Finalizações')),
                ('finalizacoes_gol', models.IntegerField(verbose_name='Finalizações no Gol')),
                ('escanteios', models.IntegerField(verbose_name='Escanteios')),
                ('faltas', models.IntegerField(verbose_name='Faltas')),
                ('impedimentos', models.IntegerField(verbose_name='Chutes Fora')),
                ('cobranca_lateral', models.IntegerField(verbose_name='Cobrança Lateral')),
                ('defesas', models.IntegerField(verbose_name='Defesas')),
                ('jogo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='jogo', to='core.jogo', verbose_name='Jogo')),
            ],
            options={
                'verbose_name': 'Estatistica do Jogo',
                'verbose_name_plural': 'Estatisticas do Jogo',
            },
        ),
        migrations.CreateModel(
            name='EstatisticasJogador',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('equipe', models.CharField(max_length=200, verbose_name='Equipe')),
                ('jogos_disputados', models.IntegerField(verbose_name='Jogos Disputados')),
                ('partidas_titular', models.IntegerField(verbose_name='Partidas como Titular')),
                ('minutos_jogados', models.IntegerField(verbose_name='Minutos Jogados')),
                ('gols', models.IntegerField(blank=True, null=True, verbose_name='Quantidade de Gols')),
                ('minutos_jogados_gol', models.IntegerField(verbose_name='Minutos Jogados por gol')),
                ('assistencia', models.IntegerField(blank=True, null=True, verbose_name='Assistências')),
                ('gols_cabeca', models.IntegerField(verbose_name='Gols de Cabeça')),
                ('gols_penalti', models.IntegerField(verbose_name='Gols de Pênalti')),
                ('chutes_gol', models.IntegerField(verbose_name='Chutes ao Gol')),
                ('chutes_fora', models.IntegerField(verbose_name='Chutes Fora')),
                ('impedimentos', models.IntegerField(verbose_name='Chutes Fora')),
                ('escanteios', models.IntegerField(verbose_name='Escanteios')),
                ('cartao_vermelho', models.IntegerField(verbose_name='Quantidade de Cartões Vermelhos')),
                ('cartao_amarelo', models.IntegerField(verbose_name='Quantidade de Cartões Amarelos')),
                ('jogador', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='estatisticas_jogador', to='core.jogador')),
            ],
            options={
                'verbose_name': 'Estatistica do Jogador',
                'verbose_name_plural': 'Estatisticas do Jogador',
            },
        ),
        migrations.AddField(
            model_name='equipe',
            name='jogadores',
            field=models.ManyToManyField(to='core.jogador', verbose_name='Goleiros'),
        ),
        migrations.CreateModel(
            name='Carreira',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('equipe', models.CharField(max_length=200, verbose_name='Equipe')),
                ('jogos', models.IntegerField(verbose_name='Jogos')),
                ('gols', models.IntegerField(verbose_name='Gols')),
                ('jogador', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='carreiras', to='core.jogador')),
            ],
            options={
                'verbose_name': 'Carreira',
                'verbose_name_plural': 'Carreiras',
            },
        ),
    ]
